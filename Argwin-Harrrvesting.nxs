{"name":"harrrvesting","enabled":true,"description":"Argwin's Harvesting Package","type":"group","id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":3,"code":"// Place any code here you'd like to autorun when the system is loaded\nset_variable('harvesting_on', 0);\nset_variable('rooms_harvested', []);\nset_variable('extracting_on', 0);\nset_variable('rooms_extracted', []);\n\n\n","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":4,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\n/*if(args.gmcp_method == \"Char.Vitals\") {\n  health = args.gmcp_args.hp;\n  mana = args.gmcp_args.mp;\n    \n  client.print(\"Health: \" + health + \" Mana: \" + mana);\n};*/\nif(args.gmcp_method == \"Room.Info\") {\n \ttype = args.gmcp_args.environment;\n    roomNum = args.gmcp_args.num;\n    areaName = args.gmcp_args.area;\n    display_notice(args.gmcp_args.area, \"yellow\");\n    doHarvest = get_variable('harvesting_on');\n    doExtract = get_variable('extracting_on');\n    set_variable('room_type', type);\n    var extractTable = get_variable('extractTable');\n    \n    if(doHarvest == 1) {\n        //client.print(roomNum);\n        found = false;\n        //client.print(found);\n        rooms = [];\n        rooms = get_variable('rooms_harvested');\n        rooms.forEach(function(index) {\n            //client.print(\"Index: \" + index);\n            //client.print(\"roomNum: \" + roomNum + \" | Rooms[index]: \" + rooms[index]);\n             if(roomNum == index) {\n                 found = true;\n                 //client.print(found);\n             }\n        });\n        if(!found) {\n            //client.print(\"About to harvest: \" + found);\n        \trooms.push(roomNum);\n        \tset_variable('rooms_harvested', rooms);\n     \t\tsend_command('harvest room', 0); \n        }\n    }\n    \n    if(doExtract == 1 && (type == \"Natural underground\" || type == \"Constructed underground\" || type == \"Mountains\" || type==\"Magma Caves\")) {\n        found = false;\n        rooms = [];\n        rooms = get_variable('rooms_extracted');\n        rooms.forEach(function(index) {\n            if(roomNum == index) {\n                found = true;\n            }\n        });\n        if (!found) {\n            rooms.push(roomNum);\n            set_variable('rooms_extracted', rooms);\n            if (extractTable[areaName]) {\n                //display_notice(\"Extract here: \" + extractTable[areaName], \"yellow\");\n                send_command(\"extract \" + extractTable[areaName]);\n            }\n        }\n    }\n    \n}","items":[]},{"type":"trigger","name":"Room Info","enabled":false,"id":19,"matching":"substring","whole_words":false,"case_sensitive":false,"text":"You are unable to find any map information for room","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#ffff00","highlight_bg":"#000000"}]},{"type":"group","name":"Harvesting","enabled":true,"id":2,"items":[{"type":"alias","name":"harvest-on","enabled":true,"id":5,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"variable","varname":"@harvesting_on","valtype":"value","value":"1","op":"set"},{"action":"notify","notice":"Harvesting on","notice_fg":"#ff0000","notice_bg":"#000000"}],"text":"harvest on","items":[]},{"type":"alias","name":"harvest-off","enabled":true,"id":6,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"variable","varname":"@harvesting_on","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"Harvesting off","notice_fg":"#ff0000","notice_bg":"#000000"}],"text":"harvest off","items":[]},{"type":"alias","name":"harvest-room","enabled":true,"id":7,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Forest","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"Forest","doelselabel":"Check Jungle"},{"action":"command","command":"harvest forest","prefix_suffix":true},{"action":"label","label":"Check Jungle"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Jungle","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check Grassland"},{"action":"command","command":"harvest jungle","prefix_suffix":true},{"action":"label","label":"Check Grassland"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Grasslands","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check hills"},{"action":"command","command":"harvest grassland","prefix_suffix":true},{"action":"label","label":"Check hills"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Hills","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check swamp"},{"action":"command","command":"harvest hills","prefix_suffix":true},{"action":"label","label":"Check swamp"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Swamp","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check mountain"},{"action":"command","command":"harvest swamp","prefix_suffix":true},{"action":"label","label":"Check mountain"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Mountains","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check underground"},{"action":"command","command":"harvest mountain","prefix_suffix":true},{"action":"label","label":"Check underground"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Natural underground","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check valley"},{"action":"command","command":"harvest cave","prefix_suffix":true},{"action":"label","label":"Check valley"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Valley","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check desert"},{"action":"command","command":"harvest valley","prefix_suffix":true},{"action":"label","label":"Check desert"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Desert","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Check Water"},{"action":"command","command":"harvest desert","prefix_suffix":true},{"action":"label","label":"Check Water"},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Ocean","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"jump","doelse":"continue","dothenlabel":"Harvest water","doelselabel":""},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"River","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"jump","doelse":"continue","dothenlabel":"Harvest water","doelselabel":""},{"action":"if","cond-type1":"variable","cond-val1":"@room_type","cond-type2":"value","cond-val2":"Freshwater","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"label","label":"Harvest water"},{"action":"command","command":"harvest water","prefix_suffix":true}],"text":"harvest room","items":[]},{"type":"alias","name":"set-rift","enabled":true,"id":8,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"variable","varname":"@rift_max","valtype":"variable","value":"riftamount","op":"set"},{"action":"notify","notice":"Maximum rift amount set","notice_fg":"#ff0000","notice_bg":"#000000"}],"text":"setrift <riftamount>","items":[]},{"type":"alias","name":"harvest-jungle","enabled":true,"id":9,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"kuzu_count\", tracking_rift.check_rift(\"kuzu root\"));\nset_variable(\"kola_count\", tracking_rift.check_rift(\"kola nut\"));\nset_variable(\"skullcap_count\", tracking_rift.check_rift(\"skullcap\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@kuzu_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Kola"},{"action":"command","command":"harvest kuzu","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Kola"},{"action":"if","cond-type1":"variable","cond-val1":"@kola_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Skullcap"},{"action":"command","command":"harvest kola","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Skullcap"},{"action":"if","cond-type1":"variable","cond-val1":"@skullcap_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest skullcap","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"INR"},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest jungle","items":[]},{"type":"alias","name":"harvest-forest","enabled":true,"id":10,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"echinacea_count\", tracking_rift.check_rift(\"echinacea\"));\nset_variable(\"ginseng_count\", tracking_rift.check_rift(\"ginseng root\"));\nset_variable(\"ginger_count\", tracking_rift.check_rift(\"ginger root\"));\nset_variable(\"myrrh_count\", tracking_rift.check_rift(\"myrrh gum\"));\nset_variable(\"lobelia_count\", tracking_rift.check_rift(\"lobelia seed\"));\nset_variable(\"burdock_count\", tracking_rift.check_rift(\"burdock\"));\nset_variable(\"elm_count\", tracking_rift.check_rift(\"slippery elm\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@echinacea_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Ginseng"},{"action":"command","command":"harvest echinacea","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Ginseng"},{"action":"if","cond-type1":"variable","cond-val1":"@ginseng_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Ginger"},{"action":"command","command":"harvest ginseng","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Ginger"},{"action":"if","cond-type1":"variable","cond-val1":"@ginger_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Myrrh"},{"action":"command","command":"harvest ginger","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Myrrh"},{"action":"if","cond-type1":"variable","cond-val1":"@myrrh_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Lobelia"},{"action":"command","command":"harvest myrrh","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Lobelia"},{"action":"if","cond-type1":"variable","cond-val1":"@lobelia_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Burdock"},{"action":"command","command":"harvest lobelia","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Burdock"},{"action":"if","cond-type1":"variable","cond-val1":"@burdock_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Elm"},{"action":"command","command":"harvest burdock","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Elm"},{"action":"if","cond-type1":"variable","cond-val1":"@elm_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest elm","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"INR"},{"action":"command","command":"Inr all","prefix_suffix":true}],"text":"harvest forest","items":[]},{"type":"alias","name":"harvest-grassland","enabled":true,"id":11,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"notify","notice":"Harvesting Grasslands","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"script","script":"//Enter the script here\nset_variable(\"goldenseal_count\", tracking_rift.check_rift(\"goldenseal root\"));\nset_variable(\"slipper_count\", tracking_rift.check_rift(\"lady's slipper root\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@goldenseal_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Slipper"},{"action":"command","command":"harvest goldenseal","prefix_suffix":true},{"action":"wait","seconds":"1","milliseconds":"100"},{"action":"label","label":"Slipper"},{"action":"if","cond-type1":"variable","cond-val1":"@slipper_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest slipper","prefix_suffix":true},{"action":"wait","seconds":"1","milliseconds":"100"},{"action":"label","label":"INR"},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest grassland","items":[]},{"type":"alias","name":"harvest-cave","enabled":true,"id":12,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"notify","notice":"Harvesting Cave","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"script","script":"//Enter the script here\nset_variable(\"irid_count\", tracking_rift.check_rift(\"irid moss\"));\nset_variable(\"bloodroot_count\", tracking_rift.check_rift(\"bloodroot leaf\"));\nset_variable(\"dust_count\", tracking_rift.check_rift(\"diamond dust\"));\nset_variable(\"lumic_count\", tracking_rift.check_rift(\"lumic moss\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@irid_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Bloodroot"},{"action":"command","command":"harvest irid","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Bloodroot"},{"action":"if","cond-type1":"variable","cond-val1":"@bloodroot_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Dust"},{"action":"command","command":"harvest bloodroot","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Dust"},{"action":"if","cond-type1":"variable","cond-val1":"@dust_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Lumic"},{"action":"command","command":"gather dust","prefix_suffix":true},{"action":"waitfor","text":"(You carefully search the cracks and crevices of the surrounding rock, but find nothing.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Lumic"},{"action":"if","cond-type1":"variable","cond-val1":"@lumic_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"gather lumic","prefix_suffix":true},{"action":"label","label":"INR"},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest cave","items":[]},{"type":"alias","name":"harvest-hills","enabled":true,"id":13,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"notify","notice":"Harvesting Hills","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"script","script":"//Enter the script here\nset_variable(\"hawthorn_count\", tracking_rift.check_rift(\"hawthorn berry\"));\nset_variable(\"bayberry_count\", tracking_rift.check_rift(\"bayberry bark\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@hawthorn_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Bayberry"},{"action":"command","command":"harvest hawthorn","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"Bayberry"},{"action":"if","cond-type1":"variable","cond-val1":"@bayberry_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest bayberry","prefix_suffix":true},{"action":"waitfor","text":"(That plant has been fully harvested.|You have recovered balance on all limbs.)","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"label","label":"INR"},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest hills","items":[]},{"type":"alias","name":"harvest-mountain","enabled":true,"id":14,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"valerian_count\", tracking_rift.check_rift(\"valerian\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@valerian_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"harvest valerian","prefix_suffix":true},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest mountain","items":[]},{"type":"alias","name":"harvest-swamp","enabled":true,"id":15,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"notify","notice":"Harvesting Swamp","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"script","script":"//Enter the script here\nset_variable(\"cohosh_count\", tracking_rift.check_rift(\"black cohosh\"));\nset_variable(\"bellwort_count\", tracking_rift.check_rift(\"bellwort flower\"));\nset_variable(\"ash_count\", tracking_rift.check_rift(\"prickly ash bark\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@cohosh_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Bellwort"},{"action":"command","command":"harvest cohosh","prefix_suffix":true},{"action":"wait","seconds":"1","milliseconds":"500"},{"action":"label","label":"Bellwort"},{"action":"if","cond-type1":"variable","cond-val1":"@bellwort_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"Ash"},{"action":"command","command":"harvest bellwort","prefix_suffix":true},{"action":"wait","seconds":"1","milliseconds":"500"},{"action":"label","label":"Ash"},{"action":"if","cond-type1":"variable","cond-val1":"@ash_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest ash","prefix_suffix":true},{"action":"wait","seconds":"1","milliseconds":"500"},{"action":"label","label":"INR"},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest swamp","items":[]},{"type":"alias","name":"harvest-water","enabled":true,"id":16,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"kelp_count\", tracking_rift.check_rift(\"kelp\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@kelp_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest kelp","prefix_suffix":true},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest water","items":[]},{"type":"alias","name":"harvest-valley","enabled":true,"id":17,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"sileris_count\", tracking_rift.check_rift(\"sileris\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@sileris_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"harvest sileris","prefix_suffix":true},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest valley"},{"type":"alias","name":"harvest-desert","enabled":true,"id":18,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"notify","notice":"Harvesting Desert","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"script","script":"//Enter the script here\nset_variable(\"pear_count\", tracking_rift.check_rift(\"prickly pear\"));\nset_variable(\"weed_count\", tracking_rift.check_rift(\"weed\"));"},{"action":"if","cond-type1":"variable","cond-val1":"@pear_count","cond-type2":"variable","cond-val2":"@rift_max","cond-op":"smaller","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"INR"},{"action":"command","command":"harvest pear","prefix_suffix":true},{"action":"wait","seconds":"0","milliseconds":"100"},{"action":"label","label":"INR"},{"action":"command","command":"inr all","prefix_suffix":true}],"text":"harvest desert"},{"type":"alias","name":"","enabled":true,"id":24,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nvar test = [];\nset_variable(\"rooms_harvested\", test);"}],"text":"harvest clear"}],"actions":[]},{"type":"group","name":"Extracting","enabled":true,"id":20,"items":[{"type":"alias","name":"extracting-on","enabled":true,"id":21,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"variable","varname":"@extracting_on","valtype":"value","value":"1","op":"set"},{"action":"notify","notice":"Extracting on","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"script","script":"//Enter the script here\nvar extractables = {Moghedu:\"bisemutum\", 'Manara Burrow':\"dolomite\",\n                    'the Caverns of Nuskuwe':\"dolomite\", \"the Island of Tuar\":\"magnesium\",\n                    \"The Digsite of the Soul\":'plumbum',\n                    \"The Digsite of Waves\":'realgar', \"New Thera\":'ferrum',\n                   \"the Isle of Polyargos\":'magnesium', \"the Mirror Caves\":'aurum',\n                   \"Hashan\":'realgar', \"the Siroccian Mountains\":'calcite',\n                   \"a Dwarven camp\":'malachite', \"an Orcish outpost\":'malachite',\n                   \"the Sunderlands\":'plumbum', \"Mainad har'bain\":'plumbum',\n                   \"Judgement Mountain\":'arsenic', \"the Central Vasnari Mountains\":'arsenic',\n                   \"the Northern Vasnari Mountains\":'calcite',\n                   \"Shastaan\":'magnesium', \"the Eastern Shore\":'stannum',\n                   \"a filthy goblin village\":'stannum', \"the Mhojave Desert\":'stannum',\n                   \"the Village of Tomacula\":'antimony', \"the Chapel of All Gods\":'antimony',\n                   \"the Dungeon of the Beastlords\":'gypsum',\n                   \"a network of caves beneath New Thera\":'aurum',\n                   \"the Den of the Quisalis\":'gypsum', \"the Sarave Foothills\":'antimony',\n                   \"Squall Cleft\":'quicksilver', \"the Asterian Peninsula\":'antimony',\n                   \"Sparrow's Rest\":'antimony', \"The Digsite of Equilibrium\":'antimony',\n                   \"the Island off the Northern Vashnars\":'argentum',\n                   \"the Halls of Blackrock\":'aurum', \"the Caves of Delmarin\":'dolomite',\n                   \"the village of Tasur'ke\":'calamine',\"the Vashnar Mountains\":'malachite',\n                   \"the Savannah\":'azurite', \"the Southern Vashnar Mountains\":'malachite',\n                   \"the Ilyrean Tundra\":'calamine', \"The Digsite of Rage\":'magnesium'};\nset_variable(\"extractTable\", extractables);"}],"text":"extracting on"},{"type":"alias","name":"extracting-off","enabled":true,"id":22,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"variable","varname":"@extracting_on","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"Extracting off","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"variable","varname":"@extractTable","valtype":"variable","value":"","op":"del"}],"text":"extracting off"},{"type":"alias","name":"Where","enabled":true,"id":23,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nvar extractables = get_variable(\"extractTable\");\nvar locations;\nvar mineral = args[1];\n\ndisplay_notice(mineral + \" can be found at: \", \"red\");\nextractables.forEach(function(el) {\n    if(el(1)==mineral) {\n        display_notice(mineral + \": \" + el, \"yellow\");\n    }\n});"}],"text":"extractwhere (\\w+)"}],"actions":[]}]}